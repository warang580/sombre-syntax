@import "syntax-variables";

.bracket-matcher .region {
  border-bottom: 2px solid @white;
  background-color: hsla(195, 18%, 42%, 0.5);
}

atom-text-editor {
  background-color: @syntax-background-color;
  color: @syntax-text-color;

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .line.cursor-line {
    background-color: rgba(47, 55, 69, 0.5);
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }

      &.cursor-line-no-selection {
        color: @syntax-gutter-text-color-selected;
      }

      &.git-line-added {
        border-left: 2px solid hsla(160, 59%, 72%, 0.95);
      }

      &.git-line-modified {
        border-left: 2px solid hsla(30, 59%, 72%, 0.95);
      }

      &.git-line-removed {
        border-left: 2px solid hsla(0, 59%, 72%, 0.95);
      }
    }
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }
}

atom-text-editor .search-results .syntax--marker .region {
  background-color: transparent;
  border: 1px solid @syntax-result-marker-color;
}

atom-text-editor .search-results .syntax--marker.current-result .region {
  border: 1px solid @syntax-result-marker-color-selected;
}

atom-text-editor[mini] .scroll-view {
  padding-left: 1px;
}

.syntax--comment,
.syntax--comment.syntax--punctuation {
  // This is made so punctuation for comments can be the same color as comments
  color: hsla(195, 18%, 42%, 0.9) !important;
  font-style: italic;
}

.syntax--comment.syntax--punctuation {
  font-style: normal;
  font-weight: bold;
}

.syntax--punctuation.syntax--definition.syntax--comment,
.syntax--comment.syntax--block {
  font-style: normal;
}

.syntax--punctuation,
.syntax--brace,
.syntax--curly,
.syntax--comma,
.syntax--arrow {
  color: @gray-450 !important;
  font-weight: normal;
}

// Arrow functions are considered as "keywords" and "punctuation"
.syntax--type.syntax--arrow, {
  color: @gray-400;
  font-weight: bold;
}

.syntax--keyword {
  border-bottom: 2px solid @gray-600;

  // Reset for punctuation, etc.
  &.syntax--other,
  &.syntax--operator {
    border-bottom: none;
  }

  // But not for "use"
  &.syntax--use {
    color: @gray-400;
  }

  &.syntax--operator {
    font-weight: bold;
    color: @gray-400;
  }
}

.syntax--storage {
  // !important to avoid override by .syntax--type
  color: @gray-400 !important;
}

// function parameters type style
.syntax--typehinted .syntax--storage.syntax--type {
  color: @gray-200 !important;
  border-bottom: 2px solid @gray-700;
}

.syntax--constant {
  color: @gray-250;
  // Target things like "true" or "false" and apply [keywords] styling
  // and [storage] color
  &.syntax--language {
    color: @gray-400;
    border-bottom: 1px solid @gray-600;
  }

  // CSS prop: *value*
  &.syntax--property-value {
    font-weight: bold;
  }
}

.syntax--numeric {
  color: @gray-300;
}

.syntax--entity {
  color: @gray-200;
}

// Tag entities (ex: html tags)
.syntax--entity.syntax--tag {
  // border-bottom: 1px solid @gray-400;
  // color: @gray-700;
  // background-color: @gray-500;
  font-weight: bold;
}

// Tag attributes names
.syntax--other.syntax--entity.syntax--attribute-name {
  color: @gray-300;
}

.syntax--variable {
  color: @gray-50;

  // Variables given by env (like window and console in JS)
  &.syntax--support {
    font-style: italic;
  }

  &.syntax--property {
    // Make properties like obj.bar behave like [storage] (but slightly lighter)
    color: @gray-350;

    &.syntax--unquoted {
      // For some reasons, in "foo: *bar*", "bar" is unquoted
      color: @gray-350;
    }
  }
}

.syntax--invalid,
.syntax--illegal {
  background-color: @white;
  color: @gray-800;
}

.syntax--string {
  color: @gray-250;

  // Don't color concatenation operators
  &:not(.syntax--operator) {
    background-color: rgba(24, 31, 42, 0.65);
    border-radius: 5px;
    padding: 0.12em 0em;
  }

  &.syntax--begin,
  &.syntax--end,
  &.syntax--definition,
  &.syntax-punctuation {
    background-color: transparent;
  }
}

.syntax--link {
  // Only underline links otherwise <link> in html etc. gets stylized
  &.syntax--underline,
  .syntax--underline {
    color: @gray-250;
    background-color: rgba(107, 119, 128, 0.35);
    border-radius: 5px;
    padding: 0.12em 0em;
  }
}

.syntax--type {
  color: @gray-150;
}

.syntax--function {
  &.syntax--support,
  &.syntax--entity {
    color: @gray-350;
    border: 1px solid @gray-750;
    background-color: rgba(55, 65, 81, 0.65);
    padding: 0.12em 0em;
    border-radius: 3px;
  }
}

// namespace <class>, use <class>, extends <class>, class <class>, etc.
.syntax--class.syntax--name,
.syntax--support.syntax--class,
.syntax--inherited-class,
.syntax--entity.syntax--other.syntax--alias {
  border-bottom: 2px solid @gray-700;
  color: @gray-200;
}
// as <class>
.syntax--keyword.syntax--other.syntax--use-as {
  color: @gray-400;
}

// In Javascript, make class stand out but not like a "standard" class
.syntax--js .syntax--meta.syntax--class,
.syntax--js .syntax--module {
  font-weight: bold;
}

// namespace keyword color
.syntax--namespace:not(.syntax--name):not(.syntax--other) {
  color: @gray-400;
}

.syntax--support.syntax--other.syntax--namespace {
  color: @gray-300;
}

// Markdown, etc.
.syntax--markup {
  &.syntax--strike {
    text-decoration: line-through;
  }

  &.syntax--bold {
    font-weight: bold;
  }

  &.syntax--italic {
    font-style: italic;
  }

  &.syntax--heading {
    font-weight: bold;
  }

  &.syntax--link {
    text-decoration: underline;
  }

  // Raw code
  &.syntax--raw {
    color: @gray-400;
  }
}
